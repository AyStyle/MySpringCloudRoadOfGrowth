server:
    port: 8091

spring:
    application:
        name: auto-deliver
    cloud:
        config:
            name: ${spring.application.name} # 服务名称
            profile: dev  # 文件后缀
            uri: http://localhost:9006 # 配置中心uri
            label: master # 分支名称
    rabbitmq:
        host: localhost
        port: 5672
        username: guest
        password: guest

eureka:
    client:
        service-url:
            default-zone: http://localhost:8761/eureka,http://localhost:8762/eureka
    
    instance:
        instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@
        prefer-ip-address: true


# Ribbon设置
#针对的被调用方微服务名称,不加就是全局生效
resume:
    ribbon:
        #请求连接超时时间
        #ConnectTimeout: 2000
        #请求处理超时时间
        #ReadTimeout: 5000
        #对所有操作都进行重试
        OkToRetryOnAllOperations: true
        ####根据如上配置，当访问到故障请求的时候，它会再尝试访问⼀次当前实例（次数由MaxAutoRetries配置），
        ####如果不行，就换⼀个实例进行访问，如果还不行，再换⼀次实例访问（更换次数由MaxAutoRetriesNextServer配置），
        ####如果依然不行，返回失败信息。
        MaxAutoRetries: 0 #对当前选中实例重试次数，不包括第⼀次调用
        MaxAutoRetriesNextServer: 0 #切换实例的重试次数
        NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #负载策略调整

feign:
    hystrix:
        enabled: true
hystrix:
    command:
        #默认超时时间，这里可以改为一个服务名或方法名来特定某个服务或方法的熔断机制，其他参数参考com.netflix.hystrix.HystrixCommandProperties这个类配置
        default:
            execution:
                isolation:
                    thread:
                        timeoutInMilliseconds: 120000
management:
    endpoints:
        web:
            exposure:
                include: "*"